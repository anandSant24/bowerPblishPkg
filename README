1. pushed the code changes to the repos

bower works off of the tag, so tag your project with same version as 0.0.1
and push again in repo by adding tags flag

2. $ git tag 0.0.1

3. $ git push --tags

now go to github and see that there is one release has been created click on that it shows 0.0.1 has been created

final step to create bower package is to register it
bower register <name of pkg> <url>/<username>/<name of repo>

Ex: 
$ bower register BowerPkgDemo https://github.com/anandSant24/bowerPblishPkg.git
bower resolve       https://github.com/anandSant24/bowerPblishPkg.git#*
bower checkout      BowerPkgDemo#0.0.1
bower invalid-meta  The "name" is recommended to be lowercase, can contain digits, dots, dashes
bower resolved      https://github.com/anandSant24/bowerPblishPkg.git#0.0.1
? Registering a package will make it installable via the registry (https://bower? Registering a package will make it installable via the registry (https://bower.herokuapp.com), continue? Yes
bower register      https://github.com/anandSant24/bowerPblishPkg.git

Package BowerPkgDemo registered successfully!
All valid semver tags on https://github.com/anandSant24/bowerPblishPkg.git will be available as versions.
To publish a new version, just release a valid semver tag.

Run bower info BowerPkgDemo to list the available versions.


now to see bower info bowerPkgDemo
4. Consume our package 
	1. create index.html file
	2. create .bowerrc file
	3. now install your created package into this proj
	$ bower install BowerPkgDemo
bower invalid-meta  The "name" is recommended to be lowercase, can contain digits, dots, dashes
bower cached        https://github.com/anandSant24/bowerPblishPkg.git#0.0.1
bower validate      0.0.1 against https://github.com/anandSant24/bowerPblishPkg.git#*
bower install       BowerPkgDemo#0.0.1

BowerPkgDemo#0.0.1 js\lib\BowerPkgDemo	

	4. update .html file to include js/lib/simpleHelloApp.js file

5. Now that we have Successfully Published our bower Package by creating and consuming the package
	* to maintian it 
	let say I Add string "Anand Kumar"

now we have to tag it to let bower know that there is new version of out project

	before tagging lets update version in bower.json 

		$git tag 0.0.2
	Total 0 (delta 0), reused 0 (delta 0)
	To https://github.com/anandSant24/bowerPblishPkg.git
 	* [new tag]         0.0.2 -> 0.0.2

now do 
$ bower info BowerPkgDemo
	Available versions:
	  - 0.0.2
	  - 0.0.1

7. now that we have updated our package version but our client has not received the updated version

do 
$path>>bower list
bower invalid-meta  The "name" is recommended to be lowercase, can contain digits, dots, dashes
bower check-new     Checking for new versions of the project dependencies...
BowerPkgDemo#0.0.2 $path>
└── BowerPkgDemo#0.0.1 extraneous (latest is 0.0.2)

Observe that bower version is BowerPkgDemo#0.0.1
 but now there is version 0.0.2 is available to update it do update
 bower update and refresh it(to be availble to validte you have to run it on server)

 Final Quiz
 Q1. How do you create new version of bower package
 A. create a new Tag
 Q2. which command will push tag to github
 A. git push --tags
Q3.what value do you need to change in your bower.json when depolying a new version?
A. version property








